============================
``7-base_geometry.py`` module
============================


Using ``BaseGeometry``

Importing the function from the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Checking too many arguments for area:

    >>> bg = BaseGeometry()
    >>> bg.area(12)
    Traceback (most recent call last):
    ...
    TypeError: area() takes 1 positional argument but 2 were given


    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0


    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'


    >>> bg.integer_validator("age", -4)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0


    >>> bg.integer_validator("age", "4")
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer


    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer


    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer


    >>> bg.integer_validator(“age”, True)
    Traceback (most recent call last):
    ...
    SyntaxError: invalid character in identifier


    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer


    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer
